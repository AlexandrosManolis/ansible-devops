---
- hosts: all
  become: yes
  
  tasks:

    # Find public IP of the VM
    - name: Find my public IP
      uri:
        url: http://ifconfig.me/ip
        return_content: yes
      register: ip_response

    - name: Check if Docker is installed
      shell: docker --version && docker compose version
      register: docker_version_result
      ignore_errors: true

    - name: Set Docker installed fact
      set_fact:
        docker_installed: "{{ docker_version_result.rc == 0 }}"

    - name: Include and run the Docker playbook if Docker is not installed
      import_tasks: docker.yaml
      when: not docker_installed
      register: docker_output
      ignore_errors: no
      
    - name: Show Docker playbook output
      debug:
        var: docker_output.stdout
      when: not docker_installed

    - name: "Clone the Spring repository"
      git:
        repo: "https://github.com/AlexandrosManolis/farmerCompensation.git"
        dest: "{{ appdir }}"
        version: "{{ branch }}"
        force: yes

    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: "{{ appdir }}"
        state: absent

    - name: Install MailHog binary
      get_url:
          url: https://github.com/mailhog/MailHog/releases/download/v1.0.1/MailHog_linux_amd64
          dest: /usr/local/bin/mailhog
          mode: '0755'
      become: yes

    - name: Install mhsendmail binary
      get_url:
          url: https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64
          dest: /usr/local/bin/mhsendmail
          mode: '0755'
      become: yes

    - name: Create MailHog service
      copy:
          dest: /etc/systemd/system/mailhog.service
          content: |
            [Unit]
            Description=MailHog Service
            After=network.target

            [Service]
            ExecStart=/usr/local/bin/mailhog
            Restart=always
            User=nobody
            Group=nogroup

            [Install]
            WantedBy=multi-user.target
      become: yes

    - name: Reload systemd to pick up new MailHog service
      command: systemctl daemon-reload
      become: yes

    - name: Start MailHog service
      service:
          name: mailhog
          state: started
          enabled: yes
      become: yes

    # Use the public IP of the VM for the mail host in the Spring application
    - name: Set spring.mail.host to the public IP of the VM in application.properties
      lineinfile:
        path: "{{ appdir }}/src/main/resources/application.properties"
        regexp: '^spring.mail.host=.*'
        line: "spring.mail.host={{ ip_response.content }}"
        create: yes
      notify: Restart Docker Compose

    - name: Create and start services
      docker_compose:
        project_src: "{{ appdir }}"
        build: true
        state: present
      register: output
      notify: Restart Docker Compose

    - debug:
        var: output

  handlers:
    - name: Restart Docker Compose
      community.docker.docker_compose:
        project_src: "{{ appdir }}"
        restarted: true